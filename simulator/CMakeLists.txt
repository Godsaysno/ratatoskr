CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(sim)

SET(CMAKE_PREFIX_PATH /usr/local/systemc-2.3.1)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++0x")

INCLUDE_DIRECTORIES(${CMAKE_PREFIX_PATH}/include)

FIND_LIBRARY(systemc systemc ${CMAKE_PREFIX_PATH}/lib-linux64)
LINK_DIRECTORIES(${CMAKE_PREFIX_PATH}/lib-linux64)

AUX_SOURCE_DIRECTORY(src/ SRC_LIST)
AUX_SOURCE_DIRECTORY(src/utils SRC_LIST)
AUX_SOURCE_DIRECTORY(src/traffic SRC_LIST)
AUX_SOURCE_DIRECTORY(src/traffic/netrace SRC_LIST)
AUX_SOURCE_DIRECTORY(src/traffic/tasks SRC_LIST)
AUX_SOURCE_DIRECTORY(src/traffic/synthetic SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/container SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/layer SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/link SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/processingElements SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/router SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/routings SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/routings/mesh SRC_LIST)
AUX_SOURCE_DIRECTORY(src/model/selection SRC_LIST)

ADD_DEFINITIONS(-D SC_INCLUDE_DYNAMIC_PROCESSES)

ADD_EXECUTABLE(${PROJECT_NAME} ${SRC_LIST})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} systemc pugixml)


